@use '~@angular/material' as mat;
@import "colors";
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$kleinDesignFrontend-primary: mat.define-palette($md-primary);
$kleinDesignFrontend-accent: mat.define-palette($md-secondary);

// The warn palette is optional (defaults to red).
$kleinDesignFrontend-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$kleinDesignFrontend-theme: mat.define-light-theme((
  color: (
    primary: $kleinDesignFrontend-primary,
    accent: $kleinDesignFrontend-accent,
    warn: $kleinDesignFrontend-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($kleinDesignFrontend-theme);

/* You can add global styles to this file, and also import other style files */
@import "utilities";
@import "fonts";
@import "layouts";

body, html {
  min-width: 100%;
  min-height: 100%;
  padding: 0;
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  font-weight: lighter;
}

hr {
  border: 0;
  clear: both;
  display: block;
  background-color: rgba(200, 200, 200, 0.8);
  height: 1px;
}

.mat-tooltip {
  font-size: 12px !important;
}
